#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

void main() {
	
	int idade = 0;
	setlocale(LC_ALL, "");
	
	printf("olá mundo\n");
	
	printf("Digite a sua idade \n");
	/*Leitura variável idade */
	scanf("%d", &idade);
	
	printf("A idade digitada foi %d\n", idade);
	
	if(idade >= 18 && idade <= 25) {
		printf("Você é maior de idade, mas tem menos de 25 anos\n");
	}else{
		if(idade >= 25) {
			printf("tem mais que 25 anos\n");
		}else{
			printf("Menor de idade\n");
		}
	}
	
	switch(idade) {
		case 1:{
			printf("idade é um");
			break;
		}
		case 10:{
			printf("idade é 10");
			break;
		}
		case 30:{
			printf("voce digitou 20");
			break;
		}
		default:{
			printf("valor invalido\n");
			break;
		}
	}
	
}


case = valores fixos 


O processo de compilação analisa o código, do ponto de vista
sintático, e o converte para um código - objeto, que é a versão em linguagem de
máquina do programa. Se o programa possui chamada às funções de bibliotecas,
o linker (ligador) reúne o programa - objeto com as bibliotecas referenciadas e
gera o código executável (arquivo binário) (ROCHA, 2006).

scanf("%d", &idade)  <input 

stdio = prinf scanf


codigo fonte > compilado > programa a nivel de maquina > linkeditor > .exe
linkeditor = assimila a biblioteca ao projeto e criar executavel




#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

int main() {   
	
	setlocale(LC_ALL, "");
	
	int idades[5];
	
	int i;
	
	for(i = 0; i < 5; i++) {
		printf("Digite a idade da pessoa em número: %d\n", i);
		scanf("%d", &idades[i]);		
	}
	
	for(i = 0; i < 5; i++) {
		printf("A idade da pessoa número: %d é: %d\n", i, idades[i]);
		
	}




int idades[5]
float precos[10]
char nome[5] 
string = vetor de char = char nome[5]

struct = estrutura de dados heterogenea, armazenar diferentes tipos